K_language_事件触发的本质


关于事件触发的认知经历：
1.一开始，老师告诉我们，事件触发就是在猫身上系个铃铛，等它醒了，一动弹，铃铛就响了；而不必你（老鼠）亲自盯着它，每分每秒都去检测它醒了没。我当时想，这个也可以在计算机上实现？太他妈神奇了。不过隐约觉得还是应该有循环检测的。

2.写了几年程序之后，发现真没找到什么地方有轮询的，于是真的相信事件触发是不用轮询的了。

3.但是直到今天，我才彻底明白，事件触发不是 真的不需要轮询，而是把轮询的任务丢给系统了，由系统的某个方法来轮询一系列事件，如果事件状态改变会调用相应方法。就是把多个轮询归结为一个轮询，然后再深深的藏起来。

4.相当于是另外一只耗子作为铃铛替你看着猫，等它醒来再告诉你！！

这相当于说多线程只要有因果依赖，最终还是要处理锁的问题，能优化的只是把它的开销降到最低！

程序的最终速度取决于：赋值的速度，寻址取值的速度，读取指令的速度，copy的速度；系统运行的监听器性能要优于普通线程，优先级要高于普通线程。除了关机命令和几个特殊命令，其他命令概不接收。
